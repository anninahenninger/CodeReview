# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url = jdbc:mysql://localhost:3306/school?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&useSSL=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password =
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.students-query=select email, password, active from student where email=?
spring.queries.st_roles-query=select student.email, role.role from student inner join student_role on(student.student_id=student_role.student_id) inner join role on(student_role.role_id=role.role_id) where student.email=? 
spring.queries.teachers-query=select email, password, active from teacher where email=?
spring.queries.t_roles-query=select teacher.email, role.role from teacher inner join teacher_role on(teacher.teacher_id=teacher_role.teacher_id) inner join role on(teacher_role.role_id=role.role_id) where teacher.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always